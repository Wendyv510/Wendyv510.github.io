---
layout: post
title:      "CLI Data Gem Portfolio Project in Software Engineering with Flatiron"
date:       2019-12-08 00:40:11 +0000
permalink:  cli_data_gem_portfolio_project_in_software_engineering_with_flatiron
---


              Starting the very first portfolio project.  Two months in and so far so good, but now it's not a learn - do platform.  "Training wheels are off", as my Cohort Lead put it. It's just on our own, putting everything we've learned so far into real life project. No ask a question help, no TDD driven development with tests to guide you. Just you! The first time my training wheels came off - real life, 4 years old- I crashed, HARD, straight into the mailbox.  Obviously, nerves are running high, scared of crashing hard again, but keep reminding myself that even though I crashed hard, not long after I was riding around town no handed, like a pro.  Even if we crash, we can still succeed and be great.                                                        So, right out of the gate, in my IDE sandbox setting up my new repository. Along come issue number one, ALREADY!  Trying to git push origin master, and an error !rejected.                                                                                                                                                                                                                                                                                                                                                      `> To https://github.com/USERNAME/REPOSITORY.git
>  ! [rejected]        master -> master (non-fast-forward)
> error: failed to push some refs to 'https://github.com/USERNAME/REPOSITORY.git'
> To prevent you from losing history, non-fast-forward updates were rejected
> Merge the remote changes (e.g. 'git pull') before pushing again.  See the
> 'Note about fast-forwards' section of 'git push --help' for details.`                                                                                                                                                                                                                                                                                                                                                                      Luckily, it has explicit directions right there of where to go to figure it out. Only a few extra steps to remedy the issue.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              `$ git fetch origin
$ git merge origin YOUR_BRANCH_NAME

Or, you can simply use git pull to perform both commands at once:

$ git pull origin YOUR_BRANCH_NAME`https://memegenerator.net/instance
         I would like to say that this was my only issue, and everything was smoothe sailing from here, unfortunately not so much.  There were several issues and struggles.  Mostly just small main syntax errors, that either just refiguring or a quick google search, I could figure out and fix quickly.  A few more difficult issues did arise, and luckily I could reach out to my educational coach and she lent a hand to guide me in the right direction.  From environment setup issues to choosing a new site due to difficult object accessors in scraping.  Overall, first project was a success, just little step by step and I did put it all together.   First time with the training wheels off, I didn't crash hard, and is a nice confidence boost that I CAN do this.  In doing this project it really helped me solidify my understanding of overall concepts more, and got a lot more comfortable with using things as 'pry' and scraping.  I'm excited to continue to learn and grow and develop.  



